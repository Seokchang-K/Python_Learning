# 문제
# 동혁이는 나무 조각을 5개 가지고 있다. 나무 조각에는 1부터 5까지 숫자 중 하나가 쓰여져 있다. 
# 또, 모든 숫자는 다섯 조각 중 하나에만 쓰여 있다.
# 동혁이는 나무 조각을 다음과 같은 과정을 거쳐서 1, 2, 3, 4, 5 순서로 만들려고 한다.
#     첫 번째 조각의 수가 두 번째 수보다 크다면, 둘의 위치를 서로 바꾼다.
#     두 번째 조각의 수가 세 번째 수보다 크다면, 둘의 위치를 서로 바꾼다.
#     세 번째 조각의 수가 네 번째 수보다 크다면, 둘의 위치를 서로 바꾼다.
#     네 번째 조각의 수가 다섯 번째 수보다 크다면, 둘의 위치를 서로 바꾼다.
# 만약 순서가 1, 2, 3, 4, 5 순서가 아니라면 1 단계로 다시 간다.
# 처음 조각의 순서가 주어졌을 때, 위치를 바꿀 때 마다 조각의 순서를 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 조각에 쓰여 있는 수가 순서대로 주어진다. 
# 숫자는 1보다 크거나 같고, 5보다 작거나 같으며, 중복되지 않는다. 
# 처음 순서는 1, 2, 3, 4, 5가 아니다.

stick = list(map(int, input().split()))

for i in range(4, 0, -1):
    # 막대를 5개 가지고 있다.
    # i는 4, 3, 2, 1을 가진다. 
    # 4번부터 0번까지 역순으로 0번은 비포함.
    for j in range(i):
        # i = 4 j = 0 1 2 3 이렇게 한다.
        # i = 3 j = 0 1 2
        # i = 2 j = 0 1
        # i = 1 j = 0
        if stick[j] > stick[j+1]:
            # 2 3 4 5 1 이 들어온다면
            # 첫시도 때는 4번째 수까지 전부 확인하면서 왼쪽으로 민다. -> 23415 4번째 수에 오류가 있었다.
            # 두번째 시도는 3번째 수까지 확인하면서 왼쪽으로 민다. -> 23145 3번째 수에 오류가 있었다.
            # 세번째 시도는 2번째 수까지 확인하면서 왼쪽으로 민다. -> 21345 2번째 수에 오류가 있었다.
            # 네번째 시도는 1번째 수까지 확인하면서 왼쪽으로 민다. -> 12345 1번째 수에 오류가 있었다.
            stick[j], stick[j+1] = stick[j+1], stick[j]
            print(*stick)
            # stick 리스트 앞에 애스터리스크(*)를 붙여주어 리스트를 언팩킹하여 프린트 해준다.

    if stick == [1, 2, 3, 4, 5]:
        break

# 2 1 5 3 4 가 들어온다면
# i가 4일때 왼쪽에서 순서대로 0번부터 3번째 까지 비교한다.
# (0,1) (1,2) (2,3) (3,4) 이렇게 비교한다. 이렇게 비교해가면서 바꿔준다.
# 즉, j가 0 이니 0과 1을 비교 2 1 로 서로 왼쪽이 크니 서로 바꿔준다
# j가 1이니 1과 2를 비교 1 5 로 왼쪽이 크지 않으니 패스
# j가 2이니 2와 3을 비교 5 3 으로 왼쪽이 크니 바꾼다.
# j가 3이니 3과 4를 비교 5 4 니까 왼쪽이 크니 바꾼다.
# 위의 모든 교환시 마다 print 해준다.
# 다시 i가 3일때도 시행하지만 변경사항이 없으니 넘어간다.

